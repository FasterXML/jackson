== Jackson Release: 1.5 "Types R Us" ==

(but funny guys call me "Jackson Five"!)

[[Jackson|JacksonHome]] 1.5 was released on March 14th 2010.

It is classified as a "minor" update over [[1.4|JacksonRelease14]], since it will be mostly backwards compatible (hence not a "major" version bump), but will introduce new features (hence not a "patch" release).

Main focus of this release will is on implementing the number one user requested feature: [[Polymorphic type handling|JacksonPolymorphicDeserialization]]. That is, ability to embed exact type information in JSON, to allow for binding back to exact types, even if static type information does not indicate those types. This is important for some use cases, and especially with loosely typed Collections.

Following is the list of functionality that has been implemented for this release.

=== Implemented features ===

==== Implemented: major ====

 * [[JACKSON-91|http://jira.codehaus.org/browse/JACKSON-91]]: [[Polymorphic type handling|JacksonPolymorphicDeserialization]] (aka "Polymorphic deserialization"):
   * Can now handle polymorphic subtypes safely, reliably, and without any code (just annotations or global enabling).
   * Enabled using {{{@JsonTypeInfo}}} (see [[JacksonAnnotations]]) on base class; or {{{ObjectMapper.enableDefaultTyping()}}} to enable addition of type info for wide class of types.
 * [[JACKSON-195|http://jira.codehaus.org/browse/JACKSON-195]]: Add methods to {{{ObjectMapper}}} to allow [[specification of root object type|JacksonFeatureRootType]]. Implemented by new {{{ObjectWriter}}} abstraction, which also supports better way to define [[JSON View|JacksonJsonViews]] to use for serialization.
 * JSONP (json-p) support:
   * [[ JACKSON-234|http://jira.codehaus.org/browse/JACKSON-234]]: underlying {{{JSONP}}} wrapper object, handling) 
   * [[JACKSON-245|http://jira.codehaus.org/browse/JACKSON-245]]: configuration option for {{{JAX-RS}}} provider for convenience
 * [[JACKSON-244|http://jira.codehaus.org/browse/JACKSON-244]]: configurability of [[auto-detection visibility|JacksonFeatureAutoDetect]]; allows, for example, auto-detect private fields without annotations ({{{@JsonAutoDetect (getterVisibility=Visibility.ANY)}}} or equivalent global setting using {{{VisibilityChecker}}})

==== Implemented: minor ====

 * Date handling:
   * [[JACKSON-218|http://jira.codehaus.org/browse/JACKSON-218]]: More complete support for Joda datatypes.
   * [[JACKSON-236|http://jira.codehaus.org/browse/JACKSON-236]]: Parsing of Java (millisecond) timestamps from JSON Strings
 * [[JACKSON-175|http://jira.codehaus.org/browse/JACKSON-175]]: Create efficient [[JacksonFeatureTokenBuffer | TokenBuffer]] class for storing JSON document fragments
 * [[JACKSON-221 | http://jira.codehaus.org/browse/JACKSON-221]]: Add convenience method: byte[] {{{ObjectMapper.writeValueAsBytes}}}
 * [[JACKSON-229 | http://jira.codehaus.org/browse/JACKSON-229]]: Ability to [[construct polymorphic types programmatically | JacksonFeatureConstructingTypes]].
 * [[JACKSON-232 | http://jira.codehaus.org/browse/JACKSON-232]]: Allow switching of behaviour for [[JacksonJsonViews]] for non-annotated fields, using [[ SerializationConfig.Feature | http://wiki.fasterxml.com/JacksonFeaturesSerialization]] .DEFAULT_VIEW_INCLUSION.
 * [[JACKSON-241 | http://jira.codehaus.org/browse/JACKSON-241]]: Allow defining additional ignorable ("untouchable") classes for {{{JAX-RS}}} provider, method {{{JacksonJsonProvider.addUntouchable()}}}.

==== Deferred ====

Features that were considered, but postponed for following releases:

 * [[JACKSON-235 | http://jira.codehaus.org/browse/JACKSON-235]]: Handle bi-directional references using declarative method(s) ("make things work with Hibernate", SQL depedencies)

----
CategoryJackson
